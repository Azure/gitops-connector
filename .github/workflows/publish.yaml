# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# Publish a new version of a chart and image after each push to main or a tag
name: Publish

on:
  push:
    branches: [main]
    tags: ["*"]
  # Allow PR to trigger the workflow, but skips pushing artifacts
  workflow_call:

jobs:
  image:
    name: Docker Image
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.meta.outputs.version }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: reecetech/version-increment@2024.4.3
        id: version
        with:
          scheme: conventional_commits
          release_branch: tags # Outputs pre-release versions on non-tag runs
      - uses: docker/login-action@v3
        if: ${{ github.event_name == 'push' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/azure/gitops-connector
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ steps.version.outputs.version }},enable=${{ !startsWith(github.ref, 'refs/tags/') }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name == 'push' }}
          context: ./src
          platforms: linux/amd64,linux/arm64
          annotations: ${{ steps.meta.outputs.annotations }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Package chart
        run: helm package ./manifests/helm --app-version ${{ steps.meta.outputs.version }} --version ${{ steps.meta.outputs.version }}
      - uses: actions/upload-artifact@v4
        with:
          name: chart
          path: |
            gitops-connector-${{ steps.meta.outputs.version }}.tgz
            manifests/helm/README.md

  chart:
    name: Helm Chart
    needs: [image]
    runs-on: ubuntu-latest
    # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
    # However, do NOT cancel in-progress runs to allow deployments to complete.
    concurrency:
      group: pages
      cancel-in-progress: false
    env:
      version: ${{ needs.image.outputs.version }}
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: gh-pages
      - uses: actions/download-artifact@v4
        with:
          name: chart
          path: ${{ runner.temp }}/chart
      - name: Update helm repo index
        run: |
          helm repo index ${{ runner.temp }}/chart --merge index.yaml --url ${{ secrets.HELM_CHARTS_URL }}
          cp -v ${{ runner.temp }}/chart/gitops-connector-${{ env.version }}.tgz* .
          cp -v ${{ runner.temp }}/chart/index.yaml .
          cp -v ${{ runner.temp }}/chart/manifests/helm/README.md .
          git ls-files -om --exclude-standard
      - name: Push updates
        if: ${{ github.event_name == 'push' }}
        run: |
          git config --global user.email "agent@gitops.com"
          git config --global user.name "Git Ops"
          git add index.yaml gitops-connector-${{ env.version }}.tgz
          git commit -m "Add chart version ${{ env.version }}"
          git push
      - uses: docker/login-action@v3
        if: ${{ github.event_name == 'push' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push chart to ghcr.io
        if: ${{ github.event_name == 'push' }}
        run: helm push gitops-connector-${{ env.version }}.tgz oci://ghcr.io/${GITHUB_REPOSITORY_OWNER,,}/charts
        working-directory: ${{ runner.temp }}
